cmake_minimum_required (VERSION 3.22)
project(Dropper C)

set(CMAKE_C_STANDARD 23)
set(CMAKE_CXX_STANDARD 20)
set(CMAKE_C_STANDARD_REQUIRED ON)
set(CMAKE_CXX_STANDARD_REQUIRED ON)
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

unset(CMAKE_C_FLAGS_INIT)
unset(CMAKE_C_FLAGS)
unset(CMAKE_C_FLAGS_DEBUG)
unset(CMAKE_C_FLAGS_RELEASE)

unset(CMAKE_CXX_FLAGS_INIT)
unset(CMAKE_CXX_FLAGS)
unset(CMAKE_CXX_FLAGS_DEBUG)
unset(CMAKE_CXX_FLAGS_RELEASE)

include(tools/cmake/include/clang.cmake)
include(tools/cmake/include/cppcheck.cmake)
include(tools/cmake/include/valgrind.cmake)

# Windows.h 

option(STUB_WINDOWS_H "Build <stub/windows.h>" OFF)
if(STUB_WINDOWS_H)
        message(STATUS "Stubbing <windows.h> for ${CMAKE_CURRENT_LIST_FILE}")
  list(APPEND NOMAIN_SOURCES
    ${CMAKE_BINARY_DIR}/mock/stub/windows.c
    ${CMAKE_BINARY_DIR}/mock/stub/tlhelp32.c
  )
  list(APPEND NOMAIN_INCLUDES
    ${CMAKE_BINARY_DIR}/mock
    ${CMAKE_BINARY_DIR}/include
  )
else()
  unset(NOMAIN_SOURCES)
  list(APPEND NOMAIN_INCLUDES
    ${CMAKE_BINARY_DIR}/include
  )
endif()

# Portable Executable (PE)

set(PE Pe${CMAKE_PROJECT_NAME})
add_executable(${PE} src/pe.c ${NOMAIN_SOURCES})
target_include_directories(${PE} PUBLIC ${NOMAIN_INCLUDES})

# Dynamic Linked Library (DLL)

set(DLL Dll${CMAKE_PROJECT_NAME})
add_library(${DLL} SHARED src/dll.c ${NOMAIN_SOURCES})
target_include_directories(${DLL} PUBLIC ${NOMAIN_INCLUDES})

# Testing and Examples

option(TESTING "Build testing" OFF)
if(TESTING)
  include(CTest)
  enable_testing()
  add_test(
    NAME CTestSmokeTest
    COMMAND ${CMAKE_COMMAND} -E echo "smoke test"
  )
  add_subdirectory(test)
endif()

option(EXAMPLES "Build examples" OFF)
if(EXAMPLES)
	add_subdirectory(examples)
endif()

# Packaging and Distribution

option(PACKAGE "Build package" OFF)
if(PACKAGE)
  include(InstallRequiredSystemLibraries)

  set(CPACK_GENERATOR "NSIS")
  # There is a bug in NSI that does not handle full UNIX paths properly.
  # Make sure there is at least one set of four backlashes.
  # ref: https://github.com/TheErk/CMake-tutorial/blob/master/precompiled-PDFs/2016-09-27-CMake-tutorial.pdf
  set(CPACK_PACKAGE_DESCRIPTION_SUMMARY "Package Description Summary ...")
  set(CPACK_PACKAGE_VENDOR "CPack Package Vendor ...")
  set(CPACK_PACKAGE_DESCRIPTION "Package Description ...")
  set(CPACK_PACKAGE_VERSION_MAJOR 0)
  set(CPACK_PACKAGE_VERSION_MINOR 1)
  set(CPACK_PACKAGE_VERSION_PATCH 0)
  SET(CPACK_PACKAGE_INSTALL_DIRECTORY "CMAKE ${CMAKE_VERSION_MAJOR}.${CMAKE_VERSION_MINOR}")
  set(CPACK_NSIS_DISPLAY_NAME ${PE})
  set(CPACK_NSIS_CONTACT "engineering@localhost")
  set(CPACK_NSIS_MODIFY_PATH ON)
  set(CPACK_PACKAGE_EXECUTABLES ${PE} "Portable Executable Dropper")

  INSTALL(FILES ${PE}.exe
    DESTINATION bin
    CONFIGURATIONS Debug
    COMPONENT Runtime)

  include(CPack)
endif()

# Artifacts

add_custom_target(really_clean
  COMMAND ${CMAKE_COMMAND} -E echo "Removing build artifacts generated by ${CMAKE_CURRENT_LIST_FILE}"
  # src files
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/${PE}.ilk
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/${DLL}.exp
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/${DLL}.ilk

  # pe examples
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${PE}Ex0.ilk
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${PE}Ex1.ilk
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${PE}Ex2.ilk
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${PE}Ex3.ilk
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${PE}Ex4.ilk
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${PE}Ex5.ilk
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${PE}Ex6.ilk

  # dll examples
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${DLL}Ex0.exp
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${DLL}Ex0.ilk
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${DLL}Ex1.exp
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${DLL}Ex1.ilk

  # rsrc examples
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/${PE}RsrcEx0.ilk
)

add_custom_target(cclean
  COMMAND ${CMAKE_COMMAND} -E echo "Removing cmake artifacts generated by ${CMAKE_CURRENT_LIST_FILE}"
  # src files
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/CMakeCache.txt
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/CMakeFiles 
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/CTestTestfile.cmake
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/Makefile
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/Testing
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/cmake_install.cmake
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/DartConfiguration.tcl # Deprecated since version 3.27
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/compile_commands.json # Platform dependent

  # examples
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/CMakeCache.txt
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/CMakeFiles 
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/CTestTestfile.cmake
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/Makefile
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/Testing
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/examples/cmake_install.cmake

  # package files
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/${CMAKE_PROJECT_NAME}-*
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/CPack*.cmake
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/_CPack_Packages
  COMMAND ${CMAKE_COMMAND} -E rm -rf ${CMAKE_BINARY_DIR}/install_manifest.txt
)